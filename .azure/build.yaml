pr: none
trigger: none

pool:
  vmImage: ubuntu-20.04

variables:
  buildVersion: 0.0.0

steps:
- checkout: self
  fetchDepth: 0

- task: NodeTool@0
  inputs:
    versionSpec: '14.x'

- bash: |
    version=14.0.0-alpha-$(git rev-list --count $BUILD_SOURCEVERSION)
    echo 'New version='$version
    echo "##vso[task.setvariable variable=buildVersion;]$version"
  displayName: Set version

- bash: |
    echo '##vso[build.updatebuildnumber]$(buildVersion)'
  displayName: Set build name

- bash: |
    git config --global user.email "syampolsky@finitive.com"
    git config --global user.name "Steven Yampolsky"
    npm version $(buildVersion)
  displayName: npm version

- task: npmAuthenticate@0
  inputs:
    workingFile: .npmrc
  displayName: npm authenticate

- bash: |
    npm install -g node-sass@6.0.1
    yarn install
    # npm rebuild node-sass
  displayName: npm install

- bash: |
    npm run build:ci:dist
  displayName: npm build:ci:dist
- bash: |
    npm run build:ci:es
  displayName: npm build:ci:es
# - script: |
#     npm run test
#   displayName: yarn test
#   condition: succeededOrFailed()

- publish: $(System.DefaultWorkingDirectory)
  name: source
  artifact: src

- task: Npm@1
  inputs:
    command: 'publish'
    publishRegistry: 'useFeed'
    publishFeed: '80bd0842-15be-4bac-8442-82eada5ce15f/4424f450-4ea4-4d30-ab33-6a067ed3327c'

# - task: PublishTestResults@2
#   inputs:
#       testResultsFormat: 'JUnit'
#       testResultsFiles: 'junit.xml'

# - task: PublishCodeCoverageResults@1
#   inputs:
#       codeCoverageTool: 'Cobertura'
#       summaryFileLocation: 'coverage/cobertura-coverage.xml'
