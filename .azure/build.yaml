pr: none
trigger: none

pool:
  vmImage: ubuntu-20.04

steps:
- checkout: self
  fetchDepth: 0
- script: |
    env |sort
    version = 14.0.0-$(git rev-list --count $BUILD_SOURCEBRANCH)
    echo version = $version
    echo "##vso[build.updatebuildnumber]$version"
    npm version $version
    npm run build:npm
  displayName: Set version

# - task: NodeAndNpmTool@1
#   inputs:
#     versionSpec: 12.x
# - script: |
#     npm install -g npm@6.10.2
#     npm install -g yarn@1.17.3
#   displayName: npm install

# - script: |
#     yarn install --frozen-lockfile
#   displayName: yarn install
# - script: |
#     yarn clean
#   condition: succeededOrFailed()
#   displayName: yarn clean
# - script: |
#     yarn build:i18n
#   displayName: yarn build:i18n
#   condition: succeededOrFailed()
# - script: |
#     yarn build:ci:es
#   displayName: yarn build:ci:es
#   condition: succeededOrFailed()
# - script: |
#     yarn build:ci:dist
#   displayName: yarn build:ci:dist
#   condition: succeededOrFailed()
# - script: |
#     yarn test
#   displayName: yarn test
#   condition: succeededOrFailed()

# - publish: $(System.DefaultWorkingDirectory)
#   name: source
#   artifact: src

# - task: Npm@1
#   inputs:
#     command: 'publish'
#     publishRegistry: 'useFeed'
#     publishFeed: '80bd0842-15be-4bac-8442-82eada5ce15f/4424f450-4ea4-4d30-ab33-6a067ed3327c'

# - task: PublishTestResults@2
#   inputs:
#       testResultsFormat: 'JUnit'
#       testResultsFiles: 'junit.xml'

# - task: PublishCodeCoverageResults@1
#   inputs:
#       codeCoverageTool: 'Cobertura'
#       summaryFileLocation: 'coverage/cobertura-coverage.xml'
